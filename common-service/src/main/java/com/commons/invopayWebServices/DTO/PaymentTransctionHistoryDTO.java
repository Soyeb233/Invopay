/*
 * This file is generated by jOOQ.
 */
package com.commons.invopayWebServices.DTO;

import java.io.Serializable;
import java.time.LocalDateTime;

import com.commons.invopayWebServices.ENUMS.PaymentTransctionHistoryPaymentSource;

/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PaymentTransctionHistoryDTO implements Serializable {

    private static final long serialVersionUID = 1L;

    private Integer                               paymentTransctionHistoryId;
    private String                                paymentTransctionHistoryName;
    private Integer                               refInvoiceId;
    private Integer                               refClientId;
    private Double                                amount;
    private String                                currency;
    private String                                paymentintent;
    private String                                paymentintentid;
    private String                                ephemeralkey;
    private String                                customer;
    private String                                publishablekey;
    private String                                modeOfPayment;
    private String                                card;
    private PaymentTransctionHistoryPaymentSource paymentSource;
    private Byte                                  status;
    private Integer                               refUserId;
    private Integer                               deleteStatus;
    private Integer                               transactionId;
    private LocalDateTime                         addedDate;

    public PaymentTransctionHistoryDTO() {}

    public PaymentTransctionHistoryDTO(PaymentTransctionHistoryDTO value) {
        this.paymentTransctionHistoryId = value.paymentTransctionHistoryId;
        this.paymentTransctionHistoryName = value.paymentTransctionHistoryName;
        this.refInvoiceId = value.refInvoiceId;
        this.refClientId = value.refClientId;
        this.amount = value.amount;
        this.currency = value.currency;
        this.paymentintent = value.paymentintent;
        this.paymentintentid = value.paymentintentid;
        this.ephemeralkey = value.ephemeralkey;
        this.customer = value.customer;
        this.publishablekey = value.publishablekey;
        this.modeOfPayment = value.modeOfPayment;
        this.card = value.card;
        this.paymentSource = value.paymentSource;
        this.status = value.status;
        this.refUserId = value.refUserId;
        this.deleteStatus = value.deleteStatus;
        this.transactionId = value.transactionId;
        this.addedDate = value.addedDate;
    }

    public PaymentTransctionHistoryDTO(
        Integer                               paymentTransctionHistoryId,
        String                                paymentTransctionHistoryName,
        Integer                               refInvoiceId,
        Integer                               refClientId,
        Double                                amount,
        String                                currency,
        String                                paymentintent,
        String                                paymentintentid,
        String                                ephemeralkey,
        String                                customer,
        String                                publishablekey,
        String                                modeOfPayment,
        String                                card,
        PaymentTransctionHistoryPaymentSource paymentSource,
        Byte                                  status,
        Integer                               refUserId,
        Integer                               deleteStatus,
        Integer                               transactionId,
        LocalDateTime                         addedDate
    ) {
        this.paymentTransctionHistoryId = paymentTransctionHistoryId;
        this.paymentTransctionHistoryName = paymentTransctionHistoryName;
        this.refInvoiceId = refInvoiceId;
        this.refClientId = refClientId;
        this.amount = amount;
        this.currency = currency;
        this.paymentintent = paymentintent;
        this.paymentintentid = paymentintentid;
        this.ephemeralkey = ephemeralkey;
        this.customer = customer;
        this.publishablekey = publishablekey;
        this.modeOfPayment = modeOfPayment;
        this.card = card;
        this.paymentSource = paymentSource;
        this.status = status;
        this.refUserId = refUserId;
        this.deleteStatus = deleteStatus;
        this.transactionId = transactionId;
        this.addedDate = addedDate;
    }

    /**
     * Getter for <code>invopay.payment_transction_history.payment_transction_history_id</code>.
     */
    public Integer getPaymentTransctionHistoryId() {
        return this.paymentTransctionHistoryId;
    }

    /**
     * Setter for <code>invopay.payment_transction_history.payment_transction_history_id</code>.
     */
    public PaymentTransctionHistoryDTO setPaymentTransctionHistoryId(Integer paymentTransctionHistoryId) {
        this.paymentTransctionHistoryId = paymentTransctionHistoryId;
        return this;
    }

    /**
     * Getter for <code>invopay.payment_transction_history.payment_transction_history_name</code>.
     */
    public String getPaymentTransctionHistoryName() {
        return this.paymentTransctionHistoryName;
    }

    /**
     * Setter for <code>invopay.payment_transction_history.payment_transction_history_name</code>.
     */
    public PaymentTransctionHistoryDTO setPaymentTransctionHistoryName(String paymentTransctionHistoryName) {
        this.paymentTransctionHistoryName = paymentTransctionHistoryName;
        return this;
    }

    /**
     * Getter for <code>invopay.payment_transction_history.ref_invoice_id</code>.
     */
    public Integer getRefInvoiceId() {
        return this.refInvoiceId;
    }

    /**
     * Setter for <code>invopay.payment_transction_history.ref_invoice_id</code>.
     */
    public PaymentTransctionHistoryDTO setRefInvoiceId(Integer refInvoiceId) {
        this.refInvoiceId = refInvoiceId;
        return this;
    }

    /**
     * Getter for <code>invopay.payment_transction_history.ref_client_id</code>.
     */
    public Integer getRefClientId() {
        return this.refClientId;
    }

    /**
     * Setter for <code>invopay.payment_transction_history.ref_client_id</code>.
     */
    public PaymentTransctionHistoryDTO setRefClientId(Integer refClientId) {
        this.refClientId = refClientId;
        return this;
    }

    /**
     * Getter for <code>invopay.payment_transction_history.amount</code>.
     */
    public Double getAmount() {
        return this.amount;
    }

    /**
     * Setter for <code>invopay.payment_transction_history.amount</code>.
     */
    public PaymentTransctionHistoryDTO setAmount(Double amount) {
        this.amount = amount;
        return this;
    }

    /**
     * Getter for <code>invopay.payment_transction_history.currency</code>.
     */
    public String getCurrency() {
        return this.currency;
    }

    /**
     * Setter for <code>invopay.payment_transction_history.currency</code>.
     */
    public PaymentTransctionHistoryDTO setCurrency(String currency) {
        this.currency = currency;
        return this;
    }

    /**
     * Getter for <code>invopay.payment_transction_history.paymentIntent</code>.
     */
    public String getPaymentintent() {
        return this.paymentintent;
    }

    /**
     * Setter for <code>invopay.payment_transction_history.paymentIntent</code>.
     */
    public PaymentTransctionHistoryDTO setPaymentintent(String paymentintent) {
        this.paymentintent = paymentintent;
        return this;
    }

    /**
     * Getter for <code>invopay.payment_transction_history.paymentIntentID</code>.
     */
    public String getPaymentintentid() {
        return this.paymentintentid;
    }

    /**
     * Setter for <code>invopay.payment_transction_history.paymentIntentID</code>.
     */
    public PaymentTransctionHistoryDTO setPaymentintentid(String paymentintentid) {
        this.paymentintentid = paymentintentid;
        return this;
    }

    /**
     * Getter for <code>invopay.payment_transction_history.ephemeralKey</code>.
     */
    public String getEphemeralkey() {
        return this.ephemeralkey;
    }

    /**
     * Setter for <code>invopay.payment_transction_history.ephemeralKey</code>.
     */
    public PaymentTransctionHistoryDTO setEphemeralkey(String ephemeralkey) {
        this.ephemeralkey = ephemeralkey;
        return this;
    }

    /**
     * Getter for <code>invopay.payment_transction_history.customer</code>.
     */
    public String getCustomer() {
        return this.customer;
    }

    /**
     * Setter for <code>invopay.payment_transction_history.customer</code>.
     */
    public PaymentTransctionHistoryDTO setCustomer(String customer) {
        this.customer = customer;
        return this;
    }

    /**
     * Getter for <code>invopay.payment_transction_history.publishableKey</code>.
     */
    public String getPublishablekey() {
        return this.publishablekey;
    }

    /**
     * Setter for <code>invopay.payment_transction_history.publishableKey</code>.
     */
    public PaymentTransctionHistoryDTO setPublishablekey(String publishablekey) {
        this.publishablekey = publishablekey;
        return this;
    }

    /**
     * Getter for <code>invopay.payment_transction_history.mode_of_payment</code>.
     */
    public String getModeOfPayment() {
        return this.modeOfPayment;
    }

    /**
     * Setter for <code>invopay.payment_transction_history.mode_of_payment</code>.
     */
    public PaymentTransctionHistoryDTO setModeOfPayment(String modeOfPayment) {
        this.modeOfPayment = modeOfPayment;
        return this;
    }

    /**
     * Getter for <code>invopay.payment_transction_history.card</code>.
     */
    public String getCard() {
        return this.card;
    }

    /**
     * Setter for <code>invopay.payment_transction_history.card</code>.
     */
    public PaymentTransctionHistoryDTO setCard(String card) {
        this.card = card;
        return this;
    }

    /**
     * Getter for <code>invopay.payment_transction_history.payment_source</code>.
     */
    public PaymentTransctionHistoryPaymentSource getPaymentSource() {
        return this.paymentSource;
    }

    /**
     * Setter for <code>invopay.payment_transction_history.payment_source</code>.
     */
    public PaymentTransctionHistoryDTO setPaymentSource(PaymentTransctionHistoryPaymentSource paymentSource) {
        this.paymentSource = paymentSource;
        return this;
    }

    /**
     * Getter for <code>invopay.payment_transction_history.status</code>.
     */
    public Byte getStatus() {
        return this.status;
    }

    /**
     * Setter for <code>invopay.payment_transction_history.status</code>.
     */
    public PaymentTransctionHistoryDTO setStatus(Byte status) {
        this.status = status;
        return this;
    }

    /**
     * Getter for <code>invopay.payment_transction_history.ref_user_id</code>.
     */
    public Integer getRefUserId() {
        return this.refUserId;
    }

    /**
     * Setter for <code>invopay.payment_transction_history.ref_user_id</code>.
     */
    public PaymentTransctionHistoryDTO setRefUserId(Integer refUserId) {
        this.refUserId = refUserId;
        return this;
    }

    /**
     * Getter for <code>invopay.payment_transction_history.delete_status</code>.
     */
    public Integer getDeleteStatus() {
        return this.deleteStatus;
    }

    /**
     * Setter for <code>invopay.payment_transction_history.delete_status</code>.
     */
    public PaymentTransctionHistoryDTO setDeleteStatus(Integer deleteStatus) {
        this.deleteStatus = deleteStatus;
        return this;
    }

    /**
     * Getter for <code>invopay.payment_transction_history.transaction_id</code>.
     */
    public Integer getTransactionId() {
        return this.transactionId;
    }

    /**
     * Setter for <code>invopay.payment_transction_history.transaction_id</code>.
     */
    public PaymentTransctionHistoryDTO setTransactionId(Integer transactionId) {
        this.transactionId = transactionId;
        return this;
    }

    /**
     * Getter for <code>invopay.payment_transction_history.added_date</code>.
     */
    public LocalDateTime getAddedDate() {
        return this.addedDate;
    }

    /**
     * Setter for <code>invopay.payment_transction_history.added_date</code>.
     */
    public PaymentTransctionHistoryDTO setAddedDate(LocalDateTime addedDate) {
        this.addedDate = addedDate;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final PaymentTransctionHistoryDTO other = (PaymentTransctionHistoryDTO) obj;
        if (paymentTransctionHistoryId == null) {
            if (other.paymentTransctionHistoryId != null)
                return false;
        }
        else if (!paymentTransctionHistoryId.equals(other.paymentTransctionHistoryId))
            return false;
        if (paymentTransctionHistoryName == null) {
            if (other.paymentTransctionHistoryName != null)
                return false;
        }
        else if (!paymentTransctionHistoryName.equals(other.paymentTransctionHistoryName))
            return false;
        if (refInvoiceId == null) {
            if (other.refInvoiceId != null)
                return false;
        }
        else if (!refInvoiceId.equals(other.refInvoiceId))
            return false;
        if (refClientId == null) {
            if (other.refClientId != null)
                return false;
        }
        else if (!refClientId.equals(other.refClientId))
            return false;
        if (amount == null) {
            if (other.amount != null)
                return false;
        }
        else if (!amount.equals(other.amount))
            return false;
        if (currency == null) {
            if (other.currency != null)
                return false;
        }
        else if (!currency.equals(other.currency))
            return false;
        if (paymentintent == null) {
            if (other.paymentintent != null)
                return false;
        }
        else if (!paymentintent.equals(other.paymentintent))
            return false;
        if (paymentintentid == null) {
            if (other.paymentintentid != null)
                return false;
        }
        else if (!paymentintentid.equals(other.paymentintentid))
            return false;
        if (ephemeralkey == null) {
            if (other.ephemeralkey != null)
                return false;
        }
        else if (!ephemeralkey.equals(other.ephemeralkey))
            return false;
        if (customer == null) {
            if (other.customer != null)
                return false;
        }
        else if (!customer.equals(other.customer))
            return false;
        if (publishablekey == null) {
            if (other.publishablekey != null)
                return false;
        }
        else if (!publishablekey.equals(other.publishablekey))
            return false;
        if (modeOfPayment == null) {
            if (other.modeOfPayment != null)
                return false;
        }
        else if (!modeOfPayment.equals(other.modeOfPayment))
            return false;
        if (card == null) {
            if (other.card != null)
                return false;
        }
        else if (!card.equals(other.card))
            return false;
        if (paymentSource == null) {
            if (other.paymentSource != null)
                return false;
        }
        else if (!paymentSource.equals(other.paymentSource))
            return false;
        if (status == null) {
            if (other.status != null)
                return false;
        }
        else if (!status.equals(other.status))
            return false;
        if (refUserId == null) {
            if (other.refUserId != null)
                return false;
        }
        else if (!refUserId.equals(other.refUserId))
            return false;
        if (deleteStatus == null) {
            if (other.deleteStatus != null)
                return false;
        }
        else if (!deleteStatus.equals(other.deleteStatus))
            return false;
        if (transactionId == null) {
            if (other.transactionId != null)
                return false;
        }
        else if (!transactionId.equals(other.transactionId))
            return false;
        if (addedDate == null) {
            if (other.addedDate != null)
                return false;
        }
        else if (!addedDate.equals(other.addedDate))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.paymentTransctionHistoryId == null) ? 0 : this.paymentTransctionHistoryId.hashCode());
        result = prime * result + ((this.paymentTransctionHistoryName == null) ? 0 : this.paymentTransctionHistoryName.hashCode());
        result = prime * result + ((this.refInvoiceId == null) ? 0 : this.refInvoiceId.hashCode());
        result = prime * result + ((this.refClientId == null) ? 0 : this.refClientId.hashCode());
        result = prime * result + ((this.amount == null) ? 0 : this.amount.hashCode());
        result = prime * result + ((this.currency == null) ? 0 : this.currency.hashCode());
        result = prime * result + ((this.paymentintent == null) ? 0 : this.paymentintent.hashCode());
        result = prime * result + ((this.paymentintentid == null) ? 0 : this.paymentintentid.hashCode());
        result = prime * result + ((this.ephemeralkey == null) ? 0 : this.ephemeralkey.hashCode());
        result = prime * result + ((this.customer == null) ? 0 : this.customer.hashCode());
        result = prime * result + ((this.publishablekey == null) ? 0 : this.publishablekey.hashCode());
        result = prime * result + ((this.modeOfPayment == null) ? 0 : this.modeOfPayment.hashCode());
        result = prime * result + ((this.card == null) ? 0 : this.card.hashCode());
        result = prime * result + ((this.paymentSource == null) ? 0 : this.paymentSource.hashCode());
        result = prime * result + ((this.status == null) ? 0 : this.status.hashCode());
        result = prime * result + ((this.refUserId == null) ? 0 : this.refUserId.hashCode());
        result = prime * result + ((this.deleteStatus == null) ? 0 : this.deleteStatus.hashCode());
        result = prime * result + ((this.transactionId == null) ? 0 : this.transactionId.hashCode());
        result = prime * result + ((this.addedDate == null) ? 0 : this.addedDate.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("PaymentTransctionHistory (");

        sb.append(paymentTransctionHistoryId);
        sb.append(", ").append(paymentTransctionHistoryName);
        sb.append(", ").append(refInvoiceId);
        sb.append(", ").append(refClientId);
        sb.append(", ").append(amount);
        sb.append(", ").append(currency);
        sb.append(", ").append(paymentintent);
        sb.append(", ").append(paymentintentid);
        sb.append(", ").append(ephemeralkey);
        sb.append(", ").append(customer);
        sb.append(", ").append(publishablekey);
        sb.append(", ").append(modeOfPayment);
        sb.append(", ").append(card);
        sb.append(", ").append(paymentSource);
        sb.append(", ").append(status);
        sb.append(", ").append(refUserId);
        sb.append(", ").append(deleteStatus);
        sb.append(", ").append(transactionId);
        sb.append(", ").append(addedDate);

        sb.append(")");
        return sb.toString();
    }
}
