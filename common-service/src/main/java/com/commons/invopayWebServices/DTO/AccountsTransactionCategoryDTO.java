/*
 * This file is generated by jOOQ.
 */
package com.commons.invopayWebServices.DTO;


import java.io.Serializable;
import java.time.LocalDateTime;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AccountsTransactionCategoryDTO implements Serializable {

    private static final long serialVersionUID = 1L;

    private Integer       accountsTransactionCategoryId;
    private String        accountsTransactionCategoryName;
    private Integer       refUserId;
    private Integer       deleteStatus;
    private Integer       transactionId;
    private LocalDateTime addedDate;

    public AccountsTransactionCategoryDTO() {}

    public AccountsTransactionCategoryDTO(AccountsTransactionCategoryDTO value) {
        this.accountsTransactionCategoryId = value.accountsTransactionCategoryId;
        this.accountsTransactionCategoryName = value.accountsTransactionCategoryName;
        this.refUserId = value.refUserId;
        this.deleteStatus = value.deleteStatus;
        this.transactionId = value.transactionId;
        this.addedDate = value.addedDate;
    }

    public AccountsTransactionCategoryDTO(
        Integer       accountsTransactionCategoryId,
        String        accountsTransactionCategoryName,
        Integer       refUserId,
        Integer       deleteStatus,
        Integer       transactionId,
        LocalDateTime addedDate
    ) {
        this.accountsTransactionCategoryId = accountsTransactionCategoryId;
        this.accountsTransactionCategoryName = accountsTransactionCategoryName;
        this.refUserId = refUserId;
        this.deleteStatus = deleteStatus;
        this.transactionId = transactionId;
        this.addedDate = addedDate;
    }

    /**
     * Getter for <code>invopay.accounts_transaction_category.accounts_transaction_category_id</code>.
     */
    public Integer getAccountsTransactionCategoryId() {
        return this.accountsTransactionCategoryId;
    }

    /**
     * Setter for <code>invopay.accounts_transaction_category.accounts_transaction_category_id</code>.
     */
    public AccountsTransactionCategoryDTO setAccountsTransactionCategoryId(Integer accountsTransactionCategoryId) {
        this.accountsTransactionCategoryId = accountsTransactionCategoryId;
        return this;
    }

    /**
     * Getter for <code>invopay.accounts_transaction_category.accounts_transaction_category_name</code>. Accounts Transaction Category
     */
    public String getAccountsTransactionCategoryName() {
        return this.accountsTransactionCategoryName;
    }

    /**
     * Setter for <code>invopay.accounts_transaction_category.accounts_transaction_category_name</code>. Accounts Transaction Category
     */
    public AccountsTransactionCategoryDTO setAccountsTransactionCategoryName(String accountsTransactionCategoryName) {
        this.accountsTransactionCategoryName = accountsTransactionCategoryName;
        return this;
    }

    /**
     * Getter for <code>invopay.accounts_transaction_category.ref_user_id</code>.
     */
    public Integer getRefUserId() {
        return this.refUserId;
    }

    /**
     * Setter for <code>invopay.accounts_transaction_category.ref_user_id</code>.
     */
    public AccountsTransactionCategoryDTO setRefUserId(Integer refUserId) {
        this.refUserId = refUserId;
        return this;
    }

    /**
     * Getter for <code>invopay.accounts_transaction_category.delete_status</code>.
     */
    public Integer getDeleteStatus() {
        return this.deleteStatus;
    }

    /**
     * Setter for <code>invopay.accounts_transaction_category.delete_status</code>.
     */
    public AccountsTransactionCategoryDTO setDeleteStatus(Integer deleteStatus) {
        this.deleteStatus = deleteStatus;
        return this;
    }

    /**
     * Getter for <code>invopay.accounts_transaction_category.transaction_id</code>.
     */
    public Integer getTransactionId() {
        return this.transactionId;
    }

    /**
     * Setter for <code>invopay.accounts_transaction_category.transaction_id</code>.
     */
    public AccountsTransactionCategoryDTO setTransactionId(Integer transactionId) {
        this.transactionId = transactionId;
        return this;
    }

    /**
     * Getter for <code>invopay.accounts_transaction_category.added_date</code>.
     */
    public LocalDateTime getAddedDate() {
        return this.addedDate;
    }

    /**
     * Setter for <code>invopay.accounts_transaction_category.added_date</code>.
     */
    public AccountsTransactionCategoryDTO setAddedDate(LocalDateTime addedDate) {
        this.addedDate = addedDate;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final AccountsTransactionCategoryDTO other = (AccountsTransactionCategoryDTO) obj;
        if (accountsTransactionCategoryId == null) {
            if (other.accountsTransactionCategoryId != null)
                return false;
        }
        else if (!accountsTransactionCategoryId.equals(other.accountsTransactionCategoryId))
            return false;
        if (accountsTransactionCategoryName == null) {
            if (other.accountsTransactionCategoryName != null)
                return false;
        }
        else if (!accountsTransactionCategoryName.equals(other.accountsTransactionCategoryName))
            return false;
        if (refUserId == null) {
            if (other.refUserId != null)
                return false;
        }
        else if (!refUserId.equals(other.refUserId))
            return false;
        if (deleteStatus == null) {
            if (other.deleteStatus != null)
                return false;
        }
        else if (!deleteStatus.equals(other.deleteStatus))
            return false;
        if (transactionId == null) {
            if (other.transactionId != null)
                return false;
        }
        else if (!transactionId.equals(other.transactionId))
            return false;
        if (addedDate == null) {
            if (other.addedDate != null)
                return false;
        }
        else if (!addedDate.equals(other.addedDate))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.accountsTransactionCategoryId == null) ? 0 : this.accountsTransactionCategoryId.hashCode());
        result = prime * result + ((this.accountsTransactionCategoryName == null) ? 0 : this.accountsTransactionCategoryName.hashCode());
        result = prime * result + ((this.refUserId == null) ? 0 : this.refUserId.hashCode());
        result = prime * result + ((this.deleteStatus == null) ? 0 : this.deleteStatus.hashCode());
        result = prime * result + ((this.transactionId == null) ? 0 : this.transactionId.hashCode());
        result = prime * result + ((this.addedDate == null) ? 0 : this.addedDate.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("AccountsTransactionCategory (");

        sb.append(accountsTransactionCategoryId);
        sb.append(", ").append(accountsTransactionCategoryName);
        sb.append(", ").append(refUserId);
        sb.append(", ").append(deleteStatus);
        sb.append(", ").append(transactionId);
        sb.append(", ").append(addedDate);

        sb.append(")");
        return sb.toString();
    }
}
