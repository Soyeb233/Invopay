/*
 * This file is generated by jOOQ.
 */
package com.commons.invopayWebServices.DTO;




import java.io.Serializable;
import java.time.LocalDateTime;

import com.commons.invopayWebServices.ENUMS.BookingHistoryStatusStatus;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BookingHistoryStatusDTO implements Serializable {

    private static final long serialVersionUID = 1L;

    private Integer                    bookingHistoryStatusId;
    private Integer                    refBookingId;
    private BookingHistoryStatusStatus status;
    private Integer                    refUserId;
    private LocalDateTime              addedDate;
    private Integer                    transactionId;
    private Integer                    deleteStatus;

    public BookingHistoryStatusDTO() {}

    public BookingHistoryStatusDTO(BookingHistoryStatusDTO value) {
        this.bookingHistoryStatusId = value.bookingHistoryStatusId;
        this.refBookingId = value.refBookingId;
        this.status = value.status;
        this.refUserId = value.refUserId;
        this.addedDate = value.addedDate;
        this.transactionId = value.transactionId;
        this.deleteStatus = value.deleteStatus;
    }

    public BookingHistoryStatusDTO(
        Integer                    bookingHistoryStatusId,
        Integer                    refBookingId,
        BookingHistoryStatusStatus status,
        Integer                    refUserId,
        LocalDateTime              addedDate,
        Integer                    transactionId,
        Integer                    deleteStatus
    ) {
        this.bookingHistoryStatusId = bookingHistoryStatusId;
        this.refBookingId = refBookingId;
        this.status = status;
        this.refUserId = refUserId;
        this.addedDate = addedDate;
        this.transactionId = transactionId;
        this.deleteStatus = deleteStatus;
    }

    /**
     * Getter for <code>invopay.booking_history_status.booking_history_status_id</code>.
     */
    public Integer getBookingHistoryStatusId() {
        return this.bookingHistoryStatusId;
    }

    /**
     * Setter for <code>invopay.booking_history_status.booking_history_status_id</code>.
     */
    public BookingHistoryStatusDTO setBookingHistoryStatusId(Integer bookingHistoryStatusId) {
        this.bookingHistoryStatusId = bookingHistoryStatusId;
        return this;
    }

    /**
     * Getter for <code>invopay.booking_history_status.ref_booking_id</code>.
     */
    public Integer getRefBookingId() {
        return this.refBookingId;
    }

    /**
     * Setter for <code>invopay.booking_history_status.ref_booking_id</code>.
     */
    public BookingHistoryStatusDTO setRefBookingId(Integer refBookingId) {
        this.refBookingId = refBookingId;
        return this;
    }

    /**
     * Getter for <code>invopay.booking_history_status.status</code>. 1-pending, 2-approved, 3-rejected, 4- cancel
     */
    public BookingHistoryStatusStatus getStatus() {
        return this.status;
    }

    /**
     * Setter for <code>invopay.booking_history_status.status</code>. 1-pending, 2-approved, 3-rejected, 4- cancel
     */
    public BookingHistoryStatusDTO setStatus(BookingHistoryStatusStatus status) {
        this.status = status;
        return this;
    }

    /**
     * Getter for <code>invopay.booking_history_status.ref_user_id</code>.
     */
    public Integer getRefUserId() {
        return this.refUserId;
    }

    /**
     * Setter for <code>invopay.booking_history_status.ref_user_id</code>.
     */
    public BookingHistoryStatusDTO setRefUserId(Integer refUserId) {
        this.refUserId = refUserId;
        return this;
    }

    /**
     * Getter for <code>invopay.booking_history_status.added_date</code>.
     */
    public LocalDateTime getAddedDate() {
        return this.addedDate;
    }

    /**
     * Setter for <code>invopay.booking_history_status.added_date</code>.
     */
    public BookingHistoryStatusDTO setAddedDate(LocalDateTime addedDate) {
        this.addedDate = addedDate;
        return this;
    }

    /**
     * Getter for <code>invopay.booking_history_status.transaction_id</code>.
     */
    public Integer getTransactionId() {
        return this.transactionId;
    }

    /**
     * Setter for <code>invopay.booking_history_status.transaction_id</code>.
     */
    public BookingHistoryStatusDTO setTransactionId(Integer transactionId) {
        this.transactionId = transactionId;
        return this;
    }

    /**
     * Getter for <code>invopay.booking_history_status.delete_status</code>.
     */
    public Integer getDeleteStatus() {
        return this.deleteStatus;
    }

    /**
     * Setter for <code>invopay.booking_history_status.delete_status</code>.
     */
    public BookingHistoryStatusDTO setDeleteStatus(Integer deleteStatus) {
        this.deleteStatus = deleteStatus;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final BookingHistoryStatusDTO other = (BookingHistoryStatusDTO) obj;
        if (bookingHistoryStatusId == null) {
            if (other.bookingHistoryStatusId != null)
                return false;
        }
        else if (!bookingHistoryStatusId.equals(other.bookingHistoryStatusId))
            return false;
        if (refBookingId == null) {
            if (other.refBookingId != null)
                return false;
        }
        else if (!refBookingId.equals(other.refBookingId))
            return false;
        if (status == null) {
            if (other.status != null)
                return false;
        }
        else if (!status.equals(other.status))
            return false;
        if (refUserId == null) {
            if (other.refUserId != null)
                return false;
        }
        else if (!refUserId.equals(other.refUserId))
            return false;
        if (addedDate == null) {
            if (other.addedDate != null)
                return false;
        }
        else if (!addedDate.equals(other.addedDate))
            return false;
        if (transactionId == null) {
            if (other.transactionId != null)
                return false;
        }
        else if (!transactionId.equals(other.transactionId))
            return false;
        if (deleteStatus == null) {
            if (other.deleteStatus != null)
                return false;
        }
        else if (!deleteStatus.equals(other.deleteStatus))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.bookingHistoryStatusId == null) ? 0 : this.bookingHistoryStatusId.hashCode());
        result = prime * result + ((this.refBookingId == null) ? 0 : this.refBookingId.hashCode());
        result = prime * result + ((this.status == null) ? 0 : this.status.hashCode());
        result = prime * result + ((this.refUserId == null) ? 0 : this.refUserId.hashCode());
        result = prime * result + ((this.addedDate == null) ? 0 : this.addedDate.hashCode());
        result = prime * result + ((this.transactionId == null) ? 0 : this.transactionId.hashCode());
        result = prime * result + ((this.deleteStatus == null) ? 0 : this.deleteStatus.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("BookingHistoryStatus (");

        sb.append(bookingHistoryStatusId);
        sb.append(", ").append(refBookingId);
        sb.append(", ").append(status);
        sb.append(", ").append(refUserId);
        sb.append(", ").append(addedDate);
        sb.append(", ").append(transactionId);
        sb.append(", ").append(deleteStatus);

        sb.append(")");
        return sb.toString();
    }
}
