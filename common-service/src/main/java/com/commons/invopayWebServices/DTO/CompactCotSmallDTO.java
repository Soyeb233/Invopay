/*
 * This file is generated by jOOQ.
 */
package com.commons.invopayWebServices.DTO;


import java.io.Serializable;
import java.time.LocalDateTime;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CompactCotSmallDTO implements Serializable {

    private static final long serialVersionUID = 1L;

    private Integer       compactCotSmallId;
    private String        compactCotSmallName;
    private String        compactCotQuality;
    private Integer       compactCotSize;
    private Integer       refUserId;
    private Integer       deleteStatus;
    private Integer       transactionId;
    private LocalDateTime addedDate;

    public CompactCotSmallDTO() {}

    public CompactCotSmallDTO(CompactCotSmallDTO value) {
        this.compactCotSmallId = value.compactCotSmallId;
        this.compactCotSmallName = value.compactCotSmallName;
        this.compactCotQuality = value.compactCotQuality;
        this.compactCotSize = value.compactCotSize;
        this.refUserId = value.refUserId;
        this.deleteStatus = value.deleteStatus;
        this.transactionId = value.transactionId;
        this.addedDate = value.addedDate;
    }

    public CompactCotSmallDTO(
        Integer       compactCotSmallId,
        String        compactCotSmallName,
        String        compactCotQuality,
        Integer       compactCotSize,
        Integer       refUserId,
        Integer       deleteStatus,
        Integer       transactionId,
        LocalDateTime addedDate
    ) {
        this.compactCotSmallId = compactCotSmallId;
        this.compactCotSmallName = compactCotSmallName;
        this.compactCotQuality = compactCotQuality;
        this.compactCotSize = compactCotSize;
        this.refUserId = refUserId;
        this.deleteStatus = deleteStatus;
        this.transactionId = transactionId;
        this.addedDate = addedDate;
    }

    /**
     * Getter for <code>invopay.compact_cot_small.compact_cot_small_id</code>.
     */
    public Integer getCompactCotSmallId() {
        return this.compactCotSmallId;
    }

    /**
     * Setter for <code>invopay.compact_cot_small.compact_cot_small_id</code>.
     */
    public CompactCotSmallDTO setCompactCotSmallId(Integer compactCotSmallId) {
        this.compactCotSmallId = compactCotSmallId;
        return this;
    }

    /**
     * Getter for <code>invopay.compact_cot_small.compact_cot_small_name</code>. Compact Cot Name
     */
    public String getCompactCotSmallName() {
        return this.compactCotSmallName;
    }

    /**
     * Setter for <code>invopay.compact_cot_small.compact_cot_small_name</code>. Compact Cot Name
     */
    public CompactCotSmallDTO setCompactCotSmallName(String compactCotSmallName) {
        this.compactCotSmallName = compactCotSmallName;
        return this;
    }

    /**
     * Getter for <code>invopay.compact_cot_small.compact_cot_quality</code>. Quality
     */
    public String getCompactCotQuality() {
        return this.compactCotQuality;
    }

    /**
     * Setter for <code>invopay.compact_cot_small.compact_cot_quality</code>. Quality
     */
    public CompactCotSmallDTO setCompactCotQuality(String compactCotQuality) {
        this.compactCotQuality = compactCotQuality;
        return this;
    }

    /**
     * Getter for <code>invopay.compact_cot_small.compact_cot_size</code>. Size
     */
    public Integer getCompactCotSize() {
        return this.compactCotSize;
    }

    /**
     * Setter for <code>invopay.compact_cot_small.compact_cot_size</code>. Size
     */
    public CompactCotSmallDTO setCompactCotSize(Integer compactCotSize) {
        this.compactCotSize = compactCotSize;
        return this;
    }

    /**
     * Getter for <code>invopay.compact_cot_small.ref_user_id</code>. User
     */
    public Integer getRefUserId() {
        return this.refUserId;
    }

    /**
     * Setter for <code>invopay.compact_cot_small.ref_user_id</code>. User
     */
    public CompactCotSmallDTO setRefUserId(Integer refUserId) {
        this.refUserId = refUserId;
        return this;
    }

    /**
     * Getter for <code>invopay.compact_cot_small.delete_status</code>.
     */
    public Integer getDeleteStatus() {
        return this.deleteStatus;
    }

    /**
     * Setter for <code>invopay.compact_cot_small.delete_status</code>.
     */
    public CompactCotSmallDTO setDeleteStatus(Integer deleteStatus) {
        this.deleteStatus = deleteStatus;
        return this;
    }

    /**
     * Getter for <code>invopay.compact_cot_small.transaction_id</code>.
     */
    public Integer getTransactionId() {
        return this.transactionId;
    }

    /**
     * Setter for <code>invopay.compact_cot_small.transaction_id</code>.
     */
    public CompactCotSmallDTO setTransactionId(Integer transactionId) {
        this.transactionId = transactionId;
        return this;
    }

    /**
     * Getter for <code>invopay.compact_cot_small.added_date</code>. Added Date
     */
    public LocalDateTime getAddedDate() {
        return this.addedDate;
    }

    /**
     * Setter for <code>invopay.compact_cot_small.added_date</code>. Added Date
     */
    public CompactCotSmallDTO setAddedDate(LocalDateTime addedDate) {
        this.addedDate = addedDate;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final CompactCotSmallDTO other = (CompactCotSmallDTO) obj;
        if (compactCotSmallId == null) {
            if (other.compactCotSmallId != null)
                return false;
        }
        else if (!compactCotSmallId.equals(other.compactCotSmallId))
            return false;
        if (compactCotSmallName == null) {
            if (other.compactCotSmallName != null)
                return false;
        }
        else if (!compactCotSmallName.equals(other.compactCotSmallName))
            return false;
        if (compactCotQuality == null) {
            if (other.compactCotQuality != null)
                return false;
        }
        else if (!compactCotQuality.equals(other.compactCotQuality))
            return false;
        if (compactCotSize == null) {
            if (other.compactCotSize != null)
                return false;
        }
        else if (!compactCotSize.equals(other.compactCotSize))
            return false;
        if (refUserId == null) {
            if (other.refUserId != null)
                return false;
        }
        else if (!refUserId.equals(other.refUserId))
            return false;
        if (deleteStatus == null) {
            if (other.deleteStatus != null)
                return false;
        }
        else if (!deleteStatus.equals(other.deleteStatus))
            return false;
        if (transactionId == null) {
            if (other.transactionId != null)
                return false;
        }
        else if (!transactionId.equals(other.transactionId))
            return false;
        if (addedDate == null) {
            if (other.addedDate != null)
                return false;
        }
        else if (!addedDate.equals(other.addedDate))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.compactCotSmallId == null) ? 0 : this.compactCotSmallId.hashCode());
        result = prime * result + ((this.compactCotSmallName == null) ? 0 : this.compactCotSmallName.hashCode());
        result = prime * result + ((this.compactCotQuality == null) ? 0 : this.compactCotQuality.hashCode());
        result = prime * result + ((this.compactCotSize == null) ? 0 : this.compactCotSize.hashCode());
        result = prime * result + ((this.refUserId == null) ? 0 : this.refUserId.hashCode());
        result = prime * result + ((this.deleteStatus == null) ? 0 : this.deleteStatus.hashCode());
        result = prime * result + ((this.transactionId == null) ? 0 : this.transactionId.hashCode());
        result = prime * result + ((this.addedDate == null) ? 0 : this.addedDate.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("CompactCotSmall (");

        sb.append(compactCotSmallId);
        sb.append(", ").append(compactCotSmallName);
        sb.append(", ").append(compactCotQuality);
        sb.append(", ").append(compactCotSize);
        sb.append(", ").append(refUserId);
        sb.append(", ").append(deleteStatus);
        sb.append(", ").append(transactionId);
        sb.append(", ").append(addedDate);

        sb.append(")");
        return sb.toString();
    }
}
