/*
 * This file is generated by jOOQ.
 */
package com.commons.invopayWebServices.DTO;


import java.io.Serializable;
import java.time.LocalDate;
import java.time.LocalDateTime;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ProductOldDTO implements Serializable {

    private static final long serialVersionUID = 1L;

    private Integer       productId;
    private String        productName;
    private Integer       productSize;
    private String        unit;
    private String        schedule;
    private Integer       refCategoryId;
    private Integer       refGstTypeId;
    private Double        productPrice;
    private String        sku;
    private Integer       refStockRoomId;
    private Integer       refStockSlotId;
    private Integer       quantity;
    private Integer       refQuantityTypeId;
    private String        productImageFile;
    private String        description;
    private Integer       refStarRatingId;
    private LocalDate     expiryDate;
    private Integer       reorderLevel;
    private Integer       reorderStatus;
    private Byte          featuredProduct;
    private Integer       displayHomepage;
    private Long          supplierCommPerc;
    private Integer       deleteStatus;
    private Integer       refUserId;
    private Integer       transactionId;
    private LocalDateTime addedDate;

    public ProductOldDTO() {}

    public ProductOldDTO(ProductOldDTO value) {
        this.productId = value.productId;
        this.productName = value.productName;
        this.productSize = value.productSize;
        this.unit = value.unit;
        this.schedule = value.schedule;
        this.refCategoryId = value.refCategoryId;
        this.refGstTypeId = value.refGstTypeId;
        this.productPrice = value.productPrice;
        this.sku = value.sku;
        this.refStockRoomId = value.refStockRoomId;
        this.refStockSlotId = value.refStockSlotId;
        this.quantity = value.quantity;
        this.refQuantityTypeId = value.refQuantityTypeId;
        this.productImageFile = value.productImageFile;
        this.description = value.description;
        this.refStarRatingId = value.refStarRatingId;
        this.expiryDate = value.expiryDate;
        this.reorderLevel = value.reorderLevel;
        this.reorderStatus = value.reorderStatus;
        this.featuredProduct = value.featuredProduct;
        this.displayHomepage = value.displayHomepage;
        this.supplierCommPerc = value.supplierCommPerc;
        this.deleteStatus = value.deleteStatus;
        this.refUserId = value.refUserId;
        this.transactionId = value.transactionId;
        this.addedDate = value.addedDate;
    }

    public ProductOldDTO(
        Integer       productId,
        String        productName,
        Integer       productSize,
        String        unit,
        String        schedule,
        Integer       refCategoryId,
        Integer       refGstTypeId,
        Double        productPrice,
        String        sku,
        Integer       refStockRoomId,
        Integer       refStockSlotId,
        Integer       quantity,
        Integer       refQuantityTypeId,
        String        productImageFile,
        String        description,
        Integer       refStarRatingId,
        LocalDate     expiryDate,
        Integer       reorderLevel,
        Integer       reorderStatus,
        Byte          featuredProduct,
        Integer       displayHomepage,
        Long          supplierCommPerc,
        Integer       deleteStatus,
        Integer       refUserId,
        Integer       transactionId,
        LocalDateTime addedDate
    ) {
        this.productId = productId;
        this.productName = productName;
        this.productSize = productSize;
        this.unit = unit;
        this.schedule = schedule;
        this.refCategoryId = refCategoryId;
        this.refGstTypeId = refGstTypeId;
        this.productPrice = productPrice;
        this.sku = sku;
        this.refStockRoomId = refStockRoomId;
        this.refStockSlotId = refStockSlotId;
        this.quantity = quantity;
        this.refQuantityTypeId = refQuantityTypeId;
        this.productImageFile = productImageFile;
        this.description = description;
        this.refStarRatingId = refStarRatingId;
        this.expiryDate = expiryDate;
        this.reorderLevel = reorderLevel;
        this.reorderStatus = reorderStatus;
        this.featuredProduct = featuredProduct;
        this.displayHomepage = displayHomepage;
        this.supplierCommPerc = supplierCommPerc;
        this.deleteStatus = deleteStatus;
        this.refUserId = refUserId;
        this.transactionId = transactionId;
        this.addedDate = addedDate;
    }

    /**
     * Getter for <code>invopay.product_old.product_id</code>.
     */
    public Integer getProductId() {
        return this.productId;
    }

    /**
     * Setter for <code>invopay.product_old.product_id</code>.
     */
    public ProductOldDTO setProductId(Integer productId) {
        this.productId = productId;
        return this;
    }

    /**
     * Getter for <code>invopay.product_old.product_name</code>. Product
     */
    public String getProductName() {
        return this.productName;
    }

    /**
     * Setter for <code>invopay.product_old.product_name</code>. Product
     */
    public ProductOldDTO setProductName(String productName) {
        this.productName = productName;
        return this;
    }

    /**
     * Getter for <code>invopay.product_old.product_size</code>.
     */
    public Integer getProductSize() {
        return this.productSize;
    }

    /**
     * Setter for <code>invopay.product_old.product_size</code>.
     */
    public ProductOldDTO setProductSize(Integer productSize) {
        this.productSize = productSize;
        return this;
    }

    /**
     * Getter for <code>invopay.product_old.unit</code>.
     */
    public String getUnit() {
        return this.unit;
    }

    /**
     * Setter for <code>invopay.product_old.unit</code>.
     */
    public ProductOldDTO setUnit(String unit) {
        this.unit = unit;
        return this;
    }

    /**
     * Getter for <code>invopay.product_old.schedule</code>.
     */
    public String getSchedule() {
        return this.schedule;
    }

    /**
     * Setter for <code>invopay.product_old.schedule</code>.
     */
    public ProductOldDTO setSchedule(String schedule) {
        this.schedule = schedule;
        return this;
    }

    /**
     * Getter for <code>invopay.product_old.ref_category_id</code>. Category
     */
    public Integer getRefCategoryId() {
        return this.refCategoryId;
    }

    /**
     * Setter for <code>invopay.product_old.ref_category_id</code>. Category
     */
    public ProductOldDTO setRefCategoryId(Integer refCategoryId) {
        this.refCategoryId = refCategoryId;
        return this;
    }

    /**
     * Getter for <code>invopay.product_old.ref_gst_type_id</code>. GST
     */
    public Integer getRefGstTypeId() {
        return this.refGstTypeId;
    }

    /**
     * Setter for <code>invopay.product_old.ref_gst_type_id</code>. GST
     */
    public ProductOldDTO setRefGstTypeId(Integer refGstTypeId) {
        this.refGstTypeId = refGstTypeId;
        return this;
    }

    /**
     * Getter for <code>invopay.product_old.product_price</code>. Price
     */
    public Double getProductPrice() {
        return this.productPrice;
    }

    /**
     * Setter for <code>invopay.product_old.product_price</code>. Price
     */
    public ProductOldDTO setProductPrice(Double productPrice) {
        this.productPrice = productPrice;
        return this;
    }

    /**
     * Getter for <code>invopay.product_old.sku</code>. SKU
     */
    public String getSku() {
        return this.sku;
    }

    /**
     * Setter for <code>invopay.product_old.sku</code>. SKU
     */
    public ProductOldDTO setSku(String sku) {
        this.sku = sku;
        return this;
    }

    /**
     * Getter for <code>invopay.product_old.ref_stock_room_id</code>.
     */
    public Integer getRefStockRoomId() {
        return this.refStockRoomId;
    }

    /**
     * Setter for <code>invopay.product_old.ref_stock_room_id</code>.
     */
    public ProductOldDTO setRefStockRoomId(Integer refStockRoomId) {
        this.refStockRoomId = refStockRoomId;
        return this;
    }

    /**
     * Getter for <code>invopay.product_old.ref_stock_slot_id</code>.
     */
    public Integer getRefStockSlotId() {
        return this.refStockSlotId;
    }

    /**
     * Setter for <code>invopay.product_old.ref_stock_slot_id</code>.
     */
    public ProductOldDTO setRefStockSlotId(Integer refStockSlotId) {
        this.refStockSlotId = refStockSlotId;
        return this;
    }

    /**
     * Getter for <code>invopay.product_old.quantity</code>. Quantity
     */
    public Integer getQuantity() {
        return this.quantity;
    }

    /**
     * Setter for <code>invopay.product_old.quantity</code>. Quantity
     */
    public ProductOldDTO setQuantity(Integer quantity) {
        this.quantity = quantity;
        return this;
    }

    /**
     * Getter for <code>invopay.product_old.ref_quantity_type_id</code>.
     */
    public Integer getRefQuantityTypeId() {
        return this.refQuantityTypeId;
    }

    /**
     * Setter for <code>invopay.product_old.ref_quantity_type_id</code>.
     */
    public ProductOldDTO setRefQuantityTypeId(Integer refQuantityTypeId) {
        this.refQuantityTypeId = refQuantityTypeId;
        return this;
    }

    /**
     * Getter for <code>invopay.product_old.product_image_file</code>.
     */
    public String getProductImageFile() {
        return this.productImageFile;
    }

    /**
     * Setter for <code>invopay.product_old.product_image_file</code>.
     */
    public ProductOldDTO setProductImageFile(String productImageFile) {
        this.productImageFile = productImageFile;
        return this;
    }

    /**
     * Getter for <code>invopay.product_old.description</code>.
     */
    public String getDescription() {
        return this.description;
    }

    /**
     * Setter for <code>invopay.product_old.description</code>.
     */
    public ProductOldDTO setDescription(String description) {
        this.description = description;
        return this;
    }

    /**
     * Getter for <code>invopay.product_old.ref_star_rating_id</code>.
     */
    public Integer getRefStarRatingId() {
        return this.refStarRatingId;
    }

    /**
     * Setter for <code>invopay.product_old.ref_star_rating_id</code>.
     */
    public ProductOldDTO setRefStarRatingId(Integer refStarRatingId) {
        this.refStarRatingId = refStarRatingId;
        return this;
    }

    /**
     * Getter for <code>invopay.product_old.expiry_date</code>.
     */
    public LocalDate getExpiryDate() {
        return this.expiryDate;
    }

    /**
     * Setter for <code>invopay.product_old.expiry_date</code>.
     */
    public ProductOldDTO setExpiryDate(LocalDate expiryDate) {
        this.expiryDate = expiryDate;
        return this;
    }

    /**
     * Getter for <code>invopay.product_old.reorder_level</code>.
     */
    public Integer getReorderLevel() {
        return this.reorderLevel;
    }

    /**
     * Setter for <code>invopay.product_old.reorder_level</code>.
     */
    public ProductOldDTO setReorderLevel(Integer reorderLevel) {
        this.reorderLevel = reorderLevel;
        return this;
    }

    /**
     * Getter for <code>invopay.product_old.reorder_status</code>. 0-Pending,1-Processing,3-Completed
     */
    public Integer getReorderStatus() {
        return this.reorderStatus;
    }

    /**
     * Setter for <code>invopay.product_old.reorder_status</code>. 0-Pending,1-Processing,3-Completed
     */
    public ProductOldDTO setReorderStatus(Integer reorderStatus) {
        this.reorderStatus = reorderStatus;
        return this;
    }

    /**
     * Getter for <code>invopay.product_old.featured_product</code>.
     */
    public Byte getFeaturedProduct() {
        return this.featuredProduct;
    }

    /**
     * Setter for <code>invopay.product_old.featured_product</code>.
     */
    public ProductOldDTO setFeaturedProduct(Byte featuredProduct) {
        this.featuredProduct = featuredProduct;
        return this;
    }

    /**
     * Getter for <code>invopay.product_old.display_homepage</code>.
     */
    public Integer getDisplayHomepage() {
        return this.displayHomepage;
    }

    /**
     * Setter for <code>invopay.product_old.display_homepage</code>.
     */
    public ProductOldDTO setDisplayHomepage(Integer displayHomepage) {
        this.displayHomepage = displayHomepage;
        return this;
    }

    /**
     * Getter for <code>invopay.product_old.supplier_comm_perc</code>.
     */
    public Long getSupplierCommPerc() {
        return this.supplierCommPerc;
    }

    /**
     * Setter for <code>invopay.product_old.supplier_comm_perc</code>.
     */
    public ProductOldDTO setSupplierCommPerc(Long supplierCommPerc) {
        this.supplierCommPerc = supplierCommPerc;
        return this;
    }

    /**
     * Getter for <code>invopay.product_old.delete_status</code>.
     */
    public Integer getDeleteStatus() {
        return this.deleteStatus;
    }

    /**
     * Setter for <code>invopay.product_old.delete_status</code>.
     */
    public ProductOldDTO setDeleteStatus(Integer deleteStatus) {
        this.deleteStatus = deleteStatus;
        return this;
    }

    /**
     * Getter for <code>invopay.product_old.ref_user_id</code>. User
     */
    public Integer getRefUserId() {
        return this.refUserId;
    }

    /**
     * Setter for <code>invopay.product_old.ref_user_id</code>. User
     */
    public ProductOldDTO setRefUserId(Integer refUserId) {
        this.refUserId = refUserId;
        return this;
    }

    /**
     * Getter for <code>invopay.product_old.transaction_id</code>.
     */
    public Integer getTransactionId() {
        return this.transactionId;
    }

    /**
     * Setter for <code>invopay.product_old.transaction_id</code>.
     */
    public ProductOldDTO setTransactionId(Integer transactionId) {
        this.transactionId = transactionId;
        return this;
    }

    /**
     * Getter for <code>invopay.product_old.added_date</code>. Added Date
     */
    public LocalDateTime getAddedDate() {
        return this.addedDate;
    }

    /**
     * Setter for <code>invopay.product_old.added_date</code>. Added Date
     */
    public ProductOldDTO setAddedDate(LocalDateTime addedDate) {
        this.addedDate = addedDate;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final ProductOldDTO other = (ProductOldDTO) obj;
        if (productId == null) {
            if (other.productId != null)
                return false;
        }
        else if (!productId.equals(other.productId))
            return false;
        if (productName == null) {
            if (other.productName != null)
                return false;
        }
        else if (!productName.equals(other.productName))
            return false;
        if (productSize == null) {
            if (other.productSize != null)
                return false;
        }
        else if (!productSize.equals(other.productSize))
            return false;
        if (unit == null) {
            if (other.unit != null)
                return false;
        }
        else if (!unit.equals(other.unit))
            return false;
        if (schedule == null) {
            if (other.schedule != null)
                return false;
        }
        else if (!schedule.equals(other.schedule))
            return false;
        if (refCategoryId == null) {
            if (other.refCategoryId != null)
                return false;
        }
        else if (!refCategoryId.equals(other.refCategoryId))
            return false;
        if (refGstTypeId == null) {
            if (other.refGstTypeId != null)
                return false;
        }
        else if (!refGstTypeId.equals(other.refGstTypeId))
            return false;
        if (productPrice == null) {
            if (other.productPrice != null)
                return false;
        }
        else if (!productPrice.equals(other.productPrice))
            return false;
        if (sku == null) {
            if (other.sku != null)
                return false;
        }
        else if (!sku.equals(other.sku))
            return false;
        if (refStockRoomId == null) {
            if (other.refStockRoomId != null)
                return false;
        }
        else if (!refStockRoomId.equals(other.refStockRoomId))
            return false;
        if (refStockSlotId == null) {
            if (other.refStockSlotId != null)
                return false;
        }
        else if (!refStockSlotId.equals(other.refStockSlotId))
            return false;
        if (quantity == null) {
            if (other.quantity != null)
                return false;
        }
        else if (!quantity.equals(other.quantity))
            return false;
        if (refQuantityTypeId == null) {
            if (other.refQuantityTypeId != null)
                return false;
        }
        else if (!refQuantityTypeId.equals(other.refQuantityTypeId))
            return false;
        if (productImageFile == null) {
            if (other.productImageFile != null)
                return false;
        }
        else if (!productImageFile.equals(other.productImageFile))
            return false;
        if (description == null) {
            if (other.description != null)
                return false;
        }
        else if (!description.equals(other.description))
            return false;
        if (refStarRatingId == null) {
            if (other.refStarRatingId != null)
                return false;
        }
        else if (!refStarRatingId.equals(other.refStarRatingId))
            return false;
        if (expiryDate == null) {
            if (other.expiryDate != null)
                return false;
        }
        else if (!expiryDate.equals(other.expiryDate))
            return false;
        if (reorderLevel == null) {
            if (other.reorderLevel != null)
                return false;
        }
        else if (!reorderLevel.equals(other.reorderLevel))
            return false;
        if (reorderStatus == null) {
            if (other.reorderStatus != null)
                return false;
        }
        else if (!reorderStatus.equals(other.reorderStatus))
            return false;
        if (featuredProduct == null) {
            if (other.featuredProduct != null)
                return false;
        }
        else if (!featuredProduct.equals(other.featuredProduct))
            return false;
        if (displayHomepage == null) {
            if (other.displayHomepage != null)
                return false;
        }
        else if (!displayHomepage.equals(other.displayHomepage))
            return false;
        if (supplierCommPerc == null) {
            if (other.supplierCommPerc != null)
                return false;
        }
        else if (!supplierCommPerc.equals(other.supplierCommPerc))
            return false;
        if (deleteStatus == null) {
            if (other.deleteStatus != null)
                return false;
        }
        else if (!deleteStatus.equals(other.deleteStatus))
            return false;
        if (refUserId == null) {
            if (other.refUserId != null)
                return false;
        }
        else if (!refUserId.equals(other.refUserId))
            return false;
        if (transactionId == null) {
            if (other.transactionId != null)
                return false;
        }
        else if (!transactionId.equals(other.transactionId))
            return false;
        if (addedDate == null) {
            if (other.addedDate != null)
                return false;
        }
        else if (!addedDate.equals(other.addedDate))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.productId == null) ? 0 : this.productId.hashCode());
        result = prime * result + ((this.productName == null) ? 0 : this.productName.hashCode());
        result = prime * result + ((this.productSize == null) ? 0 : this.productSize.hashCode());
        result = prime * result + ((this.unit == null) ? 0 : this.unit.hashCode());
        result = prime * result + ((this.schedule == null) ? 0 : this.schedule.hashCode());
        result = prime * result + ((this.refCategoryId == null) ? 0 : this.refCategoryId.hashCode());
        result = prime * result + ((this.refGstTypeId == null) ? 0 : this.refGstTypeId.hashCode());
        result = prime * result + ((this.productPrice == null) ? 0 : this.productPrice.hashCode());
        result = prime * result + ((this.sku == null) ? 0 : this.sku.hashCode());
        result = prime * result + ((this.refStockRoomId == null) ? 0 : this.refStockRoomId.hashCode());
        result = prime * result + ((this.refStockSlotId == null) ? 0 : this.refStockSlotId.hashCode());
        result = prime * result + ((this.quantity == null) ? 0 : this.quantity.hashCode());
        result = prime * result + ((this.refQuantityTypeId == null) ? 0 : this.refQuantityTypeId.hashCode());
        result = prime * result + ((this.productImageFile == null) ? 0 : this.productImageFile.hashCode());
        result = prime * result + ((this.description == null) ? 0 : this.description.hashCode());
        result = prime * result + ((this.refStarRatingId == null) ? 0 : this.refStarRatingId.hashCode());
        result = prime * result + ((this.expiryDate == null) ? 0 : this.expiryDate.hashCode());
        result = prime * result + ((this.reorderLevel == null) ? 0 : this.reorderLevel.hashCode());
        result = prime * result + ((this.reorderStatus == null) ? 0 : this.reorderStatus.hashCode());
        result = prime * result + ((this.featuredProduct == null) ? 0 : this.featuredProduct.hashCode());
        result = prime * result + ((this.displayHomepage == null) ? 0 : this.displayHomepage.hashCode());
        result = prime * result + ((this.supplierCommPerc == null) ? 0 : this.supplierCommPerc.hashCode());
        result = prime * result + ((this.deleteStatus == null) ? 0 : this.deleteStatus.hashCode());
        result = prime * result + ((this.refUserId == null) ? 0 : this.refUserId.hashCode());
        result = prime * result + ((this.transactionId == null) ? 0 : this.transactionId.hashCode());
        result = prime * result + ((this.addedDate == null) ? 0 : this.addedDate.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("ProductOld (");

        sb.append(productId);
        sb.append(", ").append(productName);
        sb.append(", ").append(productSize);
        sb.append(", ").append(unit);
        sb.append(", ").append(schedule);
        sb.append(", ").append(refCategoryId);
        sb.append(", ").append(refGstTypeId);
        sb.append(", ").append(productPrice);
        sb.append(", ").append(sku);
        sb.append(", ").append(refStockRoomId);
        sb.append(", ").append(refStockSlotId);
        sb.append(", ").append(quantity);
        sb.append(", ").append(refQuantityTypeId);
        sb.append(", ").append(productImageFile);
        sb.append(", ").append(description);
        sb.append(", ").append(refStarRatingId);
        sb.append(", ").append(expiryDate);
        sb.append(", ").append(reorderLevel);
        sb.append(", ").append(reorderStatus);
        sb.append(", ").append(featuredProduct);
        sb.append(", ").append(displayHomepage);
        sb.append(", ").append(supplierCommPerc);
        sb.append(", ").append(deleteStatus);
        sb.append(", ").append(refUserId);
        sb.append(", ").append(transactionId);
        sb.append(", ").append(addedDate);

        sb.append(")");
        return sb.toString();
    }
}
