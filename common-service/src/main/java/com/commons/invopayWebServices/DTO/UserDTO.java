/*
 * This file is generated by jOOQ.
 */
package com.commons.invopayWebServices.DTO;


import java.io.Serializable;
import java.time.LocalDateTime;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserDTO implements Serializable {

    private static final long serialVersionUID = 1L;

    private Integer       userId;
    private String        userName;
    private String        fullName;
    private String        nickName;
    private String        companyName;
    private String        street;
    private String        state;
    private String        postcode;
    private String        suburb;
    private Integer       refCountryId;
    private String        phone;
    private String        email;
    private String        password;
    private String        originalPassword;
    private String        imeiNo;
    private Integer       refUserGroupId;
    private Integer       refClientId;
    private Integer       refSupplierId;
    private Integer       auditRecord;
    private Integer       sessionTimeLimit;
    private Integer       reminderIntervalTime;
    private String        userImage;
    private LocalDateTime loginTime;
    private LocalDateTime lastLoginTime;
    private Integer       status;
    private String        website;
    private String        vatNumber;
    private Integer       deleteStatus;
    private Integer       transactionId;
    private LocalDateTime addedDate;

    public UserDTO() {}

    public UserDTO(UserDTO value) {
        this.userId = value.userId;
        this.userName = value.userName;
        this.fullName = value.fullName;
        this.nickName = value.nickName;
        this.companyName = value.companyName;
        this.street = value.street;
        this.state = value.state;
        this.postcode = value.postcode;
        this.suburb = value.suburb;
        this.refCountryId = value.refCountryId;
        this.phone = value.phone;
        this.email = value.email;
        this.password = value.password;
        this.originalPassword = value.originalPassword;
        this.imeiNo = value.imeiNo;
        this.refUserGroupId = value.refUserGroupId;
        this.refClientId = value.refClientId;
        this.refSupplierId = value.refSupplierId;
        this.auditRecord = value.auditRecord;
        this.sessionTimeLimit = value.sessionTimeLimit;
        this.reminderIntervalTime = value.reminderIntervalTime;
        this.userImage = value.userImage;
        this.loginTime = value.loginTime;
        this.lastLoginTime = value.lastLoginTime;
        this.status = value.status;
        this.website = value.website;
        this.vatNumber = value.vatNumber;
        this.deleteStatus = value.deleteStatus;
        this.transactionId = value.transactionId;
        this.addedDate = value.addedDate;
    }

    public UserDTO(
        Integer       userId,
        String        userName,
        String        fullName,
        String        nickName,
        String        companyName,
        String        street,
        String        state,
        String        postcode,
        String        suburb,
        Integer       refCountryId,
        String        phone,
        String        email,
        String        password,
        String        originalPassword,
        String        imeiNo,
        Integer       refUserGroupId,
        Integer       refClientId,
        Integer       refSupplierId,
        Integer       auditRecord,
        Integer       sessionTimeLimit,
        Integer       reminderIntervalTime,
        String        userImage,
        LocalDateTime loginTime,
        LocalDateTime lastLoginTime,
        Integer       status,
        String        website,
        String        vatNumber,
        Integer       deleteStatus,
        Integer       transactionId,
        LocalDateTime addedDate
    ) {
        this.userId = userId;
        this.userName = userName;
        this.fullName = fullName;
        this.nickName = nickName;
        this.companyName = companyName;
        this.street = street;
        this.state = state;
        this.postcode = postcode;
        this.suburb = suburb;
        this.refCountryId = refCountryId;
        this.phone = phone;
        this.email = email;
        this.password = password;
        this.originalPassword = originalPassword;
        this.imeiNo = imeiNo;
        this.refUserGroupId = refUserGroupId;
        this.refClientId = refClientId;
        this.refSupplierId = refSupplierId;
        this.auditRecord = auditRecord;
        this.sessionTimeLimit = sessionTimeLimit;
        this.reminderIntervalTime = reminderIntervalTime;
        this.userImage = userImage;
        this.loginTime = loginTime;
        this.lastLoginTime = lastLoginTime;
        this.status = status;
        this.website = website;
        this.vatNumber = vatNumber;
        this.deleteStatus = deleteStatus;
        this.transactionId = transactionId;
        this.addedDate = addedDate;
    }

    /**
     * Getter for <code>invopay.user.user_id</code>.
     */
    public Integer getUserId() {
        return this.userId;
    }

    /**
     * Setter for <code>invopay.user.user_id</code>.
     */
    public UserDTO setUserId(Integer userId) {
        this.userId = userId;
        return this;
    }

    /**
     * Getter for <code>invopay.user.user_name</code>. User Name
     */
    public String getUserName() {
        return this.userName;
    }

    /**
     * Setter for <code>invopay.user.user_name</code>. User Name
     */
    public UserDTO setUserName(String userName) {
        this.userName = userName;
        return this;
    }

    /**
     * Getter for <code>invopay.user.full_name</code>.
     */
    public String getFullName() {
        return this.fullName;
    }

    /**
     * Setter for <code>invopay.user.full_name</code>.
     */
    public UserDTO setFullName(String fullName) {
        this.fullName = fullName;
        return this;
    }

    /**
     * Getter for <code>invopay.user.nick_name</code>.
     */
    public String getNickName() {
        return this.nickName;
    }

    /**
     * Setter for <code>invopay.user.nick_name</code>.
     */
    public UserDTO setNickName(String nickName) {
        this.nickName = nickName;
        return this;
    }

    /**
     * Getter for <code>invopay.user.company_name</code>.
     */
    public String getCompanyName() {
        return this.companyName;
    }

    /**
     * Setter for <code>invopay.user.company_name</code>.
     */
    public UserDTO setCompanyName(String companyName) {
        this.companyName = companyName;
        return this;
    }

    /**
     * Getter for <code>invopay.user.street</code>.
     */
    public String getStreet() {
        return this.street;
    }

    /**
     * Setter for <code>invopay.user.street</code>.
     */
    public UserDTO setStreet(String street) {
        this.street = street;
        return this;
    }

    /**
     * Getter for <code>invopay.user.state</code>.
     */
    public String getState() {
        return this.state;
    }

    /**
     * Setter for <code>invopay.user.state</code>.
     */
    public UserDTO setState(String state) {
        this.state = state;
        return this;
    }

    /**
     * Getter for <code>invopay.user.postcode</code>.
     */
    public String getPostcode() {
        return this.postcode;
    }

    /**
     * Setter for <code>invopay.user.postcode</code>.
     */
    public UserDTO setPostcode(String postcode) {
        this.postcode = postcode;
        return this;
    }

    /**
     * Getter for <code>invopay.user.suburb</code>.
     */
    public String getSuburb() {
        return this.suburb;
    }

    /**
     * Setter for <code>invopay.user.suburb</code>.
     */
    public UserDTO setSuburb(String suburb) {
        this.suburb = suburb;
        return this;
    }

    /**
     * Getter for <code>invopay.user.ref_country_id</code>.
     */
    public Integer getRefCountryId() {
        return this.refCountryId;
    }

    /**
     * Setter for <code>invopay.user.ref_country_id</code>.
     */
    public UserDTO setRefCountryId(Integer refCountryId) {
        this.refCountryId = refCountryId;
        return this;
    }

    /**
     * Getter for <code>invopay.user.phone</code>.
     */
    public String getPhone() {
        return this.phone;
    }

    /**
     * Setter for <code>invopay.user.phone</code>.
     */
    public UserDTO setPhone(String phone) {
        this.phone = phone;
        return this;
    }

    /**
     * Getter for <code>invopay.user.email</code>.
     */
    public String getEmail() {
        return this.email;
    }

    /**
     * Setter for <code>invopay.user.email</code>.
     */
    public UserDTO setEmail(String email) {
        this.email = email;
        return this;
    }

    /**
     * Getter for <code>invopay.user.password</code>.
     */
    public String getPassword() {
        return this.password;
    }

    /**
     * Setter for <code>invopay.user.password</code>.
     */
    public UserDTO setPassword(String password) {
        this.password = password;
        return this;
    }

    /**
     * Getter for <code>invopay.user.original_password</code>.
     */
    public String getOriginalPassword() {
        return this.originalPassword;
    }

    /**
     * Setter for <code>invopay.user.original_password</code>.
     */
    public UserDTO setOriginalPassword(String originalPassword) {
        this.originalPassword = originalPassword;
        return this;
    }

    /**
     * Getter for <code>invopay.user.imei_no</code>.
     */
    public String getImeiNo() {
        return this.imeiNo;
    }

    /**
     * Setter for <code>invopay.user.imei_no</code>.
     */
    public UserDTO setImeiNo(String imeiNo) {
        this.imeiNo = imeiNo;
        return this;
    }

    /**
     * Getter for <code>invopay.user.ref_user_group_id</code>.
     */
    public Integer getRefUserGroupId() {
        return this.refUserGroupId;
    }

    /**
     * Setter for <code>invopay.user.ref_user_group_id</code>.
     */
    public UserDTO setRefUserGroupId(Integer refUserGroupId) {
        this.refUserGroupId = refUserGroupId;
        return this;
    }

    /**
     * Getter for <code>invopay.user.ref_client_id</code>.
     */
    public Integer getRefClientId() {
        return this.refClientId;
    }

    /**
     * Setter for <code>invopay.user.ref_client_id</code>.
     */
    public UserDTO setRefClientId(Integer refClientId) {
        this.refClientId = refClientId;
        return this;
    }

    /**
     * Getter for <code>invopay.user.ref_supplier_id</code>.
     */
    public Integer getRefSupplierId() {
        return this.refSupplierId;
    }

    /**
     * Setter for <code>invopay.user.ref_supplier_id</code>.
     */
    public UserDTO setRefSupplierId(Integer refSupplierId) {
        this.refSupplierId = refSupplierId;
        return this;
    }

    /**
     * Getter for <code>invopay.user.audit_record</code>.
     */
    public Integer getAuditRecord() {
        return this.auditRecord;
    }

    /**
     * Setter for <code>invopay.user.audit_record</code>.
     */
    public UserDTO setAuditRecord(Integer auditRecord) {
        this.auditRecord = auditRecord;
        return this;
    }

    /**
     * Getter for <code>invopay.user.session_time_limit</code>.
     */
    public Integer getSessionTimeLimit() {
        return this.sessionTimeLimit;
    }

    /**
     * Setter for <code>invopay.user.session_time_limit</code>.
     */
    public UserDTO setSessionTimeLimit(Integer sessionTimeLimit) {
        this.sessionTimeLimit = sessionTimeLimit;
        return this;
    }

    /**
     * Getter for <code>invopay.user.reminder_interval_time</code>.
     */
    public Integer getReminderIntervalTime() {
        return this.reminderIntervalTime;
    }

    /**
     * Setter for <code>invopay.user.reminder_interval_time</code>.
     */
    public UserDTO setReminderIntervalTime(Integer reminderIntervalTime) {
        this.reminderIntervalTime = reminderIntervalTime;
        return this;
    }

    /**
     * Getter for <code>invopay.user.user_image</code>.
     */
    public String getUserImage() {
        return this.userImage;
    }

    /**
     * Setter for <code>invopay.user.user_image</code>.
     */
    public UserDTO setUserImage(String userImage) {
        this.userImage = userImage;
        return this;
    }

    /**
     * Getter for <code>invopay.user.login_time</code>.
     */
    public LocalDateTime getLoginTime() {
        return this.loginTime;
    }

    /**
     * Setter for <code>invopay.user.login_time</code>.
     */
    public UserDTO setLoginTime(LocalDateTime loginTime) {
        this.loginTime = loginTime;
        return this;
    }

    /**
     * Getter for <code>invopay.user.last_login_time</code>.
     */
    public LocalDateTime getLastLoginTime() {
        return this.lastLoginTime;
    }

    /**
     * Setter for <code>invopay.user.last_login_time</code>.
     */
    public UserDTO setLastLoginTime(LocalDateTime lastLoginTime) {
        this.lastLoginTime = lastLoginTime;
        return this;
    }

    /**
     * Getter for <code>invopay.user.status</code>.
     */
    public Integer getStatus() {
        return this.status;
    }

    /**
     * Setter for <code>invopay.user.status</code>.
     */
    public UserDTO setStatus(Integer status) {
        this.status = status;
        return this;
    }

    /**
     * Getter for <code>invopay.user.website</code>.
     */
    public String getWebsite() {
        return this.website;
    }

    /**
     * Setter for <code>invopay.user.website</code>.
     */
    public UserDTO setWebsite(String website) {
        this.website = website;
        return this;
    }

    /**
     * Getter for <code>invopay.user.vat_number</code>.
     */
    public String getVatNumber() {
        return this.vatNumber;
    }

    /**
     * Setter for <code>invopay.user.vat_number</code>.
     */
    public UserDTO setVatNumber(String vatNumber) {
        this.vatNumber = vatNumber;
        return this;
    }

    /**
     * Getter for <code>invopay.user.delete_status</code>.
     */
    public Integer getDeleteStatus() {
        return this.deleteStatus;
    }

    /**
     * Setter for <code>invopay.user.delete_status</code>.
     */
    public UserDTO setDeleteStatus(Integer deleteStatus) {
        this.deleteStatus = deleteStatus;
        return this;
    }

    /**
     * Getter for <code>invopay.user.transaction_id</code>.
     */
    public Integer getTransactionId() {
        return this.transactionId;
    }

    /**
     * Setter for <code>invopay.user.transaction_id</code>.
     */
    public UserDTO setTransactionId(Integer transactionId) {
        this.transactionId = transactionId;
        return this;
    }

    /**
     * Getter for <code>invopay.user.added_date</code>.
     */
    public LocalDateTime getAddedDate() {
        return this.addedDate;
    }

    /**
     * Setter for <code>invopay.user.added_date</code>.
     */
    public UserDTO setAddedDate(LocalDateTime addedDate) {
        this.addedDate = addedDate;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final UserDTO other = (UserDTO) obj;
        if (userId == null) {
            if (other.userId != null)
                return false;
        }
        else if (!userId.equals(other.userId))
            return false;
        if (userName == null) {
            if (other.userName != null)
                return false;
        }
        else if (!userName.equals(other.userName))
            return false;
        if (fullName == null) {
            if (other.fullName != null)
                return false;
        }
        else if (!fullName.equals(other.fullName))
            return false;
        if (nickName == null) {
            if (other.nickName != null)
                return false;
        }
        else if (!nickName.equals(other.nickName))
            return false;
        if (companyName == null) {
            if (other.companyName != null)
                return false;
        }
        else if (!companyName.equals(other.companyName))
            return false;
        if (street == null) {
            if (other.street != null)
                return false;
        }
        else if (!street.equals(other.street))
            return false;
        if (state == null) {
            if (other.state != null)
                return false;
        }
        else if (!state.equals(other.state))
            return false;
        if (postcode == null) {
            if (other.postcode != null)
                return false;
        }
        else if (!postcode.equals(other.postcode))
            return false;
        if (suburb == null) {
            if (other.suburb != null)
                return false;
        }
        else if (!suburb.equals(other.suburb))
            return false;
        if (refCountryId == null) {
            if (other.refCountryId != null)
                return false;
        }
        else if (!refCountryId.equals(other.refCountryId))
            return false;
        if (phone == null) {
            if (other.phone != null)
                return false;
        }
        else if (!phone.equals(other.phone))
            return false;
        if (email == null) {
            if (other.email != null)
                return false;
        }
        else if (!email.equals(other.email))
            return false;
        if (password == null) {
            if (other.password != null)
                return false;
        }
        else if (!password.equals(other.password))
            return false;
        if (originalPassword == null) {
            if (other.originalPassword != null)
                return false;
        }
        else if (!originalPassword.equals(other.originalPassword))
            return false;
        if (imeiNo == null) {
            if (other.imeiNo != null)
                return false;
        }
        else if (!imeiNo.equals(other.imeiNo))
            return false;
        if (refUserGroupId == null) {
            if (other.refUserGroupId != null)
                return false;
        }
        else if (!refUserGroupId.equals(other.refUserGroupId))
            return false;
        if (refClientId == null) {
            if (other.refClientId != null)
                return false;
        }
        else if (!refClientId.equals(other.refClientId))
            return false;
        if (refSupplierId == null) {
            if (other.refSupplierId != null)
                return false;
        }
        else if (!refSupplierId.equals(other.refSupplierId))
            return false;
        if (auditRecord == null) {
            if (other.auditRecord != null)
                return false;
        }
        else if (!auditRecord.equals(other.auditRecord))
            return false;
        if (sessionTimeLimit == null) {
            if (other.sessionTimeLimit != null)
                return false;
        }
        else if (!sessionTimeLimit.equals(other.sessionTimeLimit))
            return false;
        if (reminderIntervalTime == null) {
            if (other.reminderIntervalTime != null)
                return false;
        }
        else if (!reminderIntervalTime.equals(other.reminderIntervalTime))
            return false;
        if (userImage == null) {
            if (other.userImage != null)
                return false;
        }
        else if (!userImage.equals(other.userImage))
            return false;
        if (loginTime == null) {
            if (other.loginTime != null)
                return false;
        }
        else if (!loginTime.equals(other.loginTime))
            return false;
        if (lastLoginTime == null) {
            if (other.lastLoginTime != null)
                return false;
        }
        else if (!lastLoginTime.equals(other.lastLoginTime))
            return false;
        if (status == null) {
            if (other.status != null)
                return false;
        }
        else if (!status.equals(other.status))
            return false;
        if (website == null) {
            if (other.website != null)
                return false;
        }
        else if (!website.equals(other.website))
            return false;
        if (vatNumber == null) {
            if (other.vatNumber != null)
                return false;
        }
        else if (!vatNumber.equals(other.vatNumber))
            return false;
        if (deleteStatus == null) {
            if (other.deleteStatus != null)
                return false;
        }
        else if (!deleteStatus.equals(other.deleteStatus))
            return false;
        if (transactionId == null) {
            if (other.transactionId != null)
                return false;
        }
        else if (!transactionId.equals(other.transactionId))
            return false;
        if (addedDate == null) {
            if (other.addedDate != null)
                return false;
        }
        else if (!addedDate.equals(other.addedDate))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.userId == null) ? 0 : this.userId.hashCode());
        result = prime * result + ((this.userName == null) ? 0 : this.userName.hashCode());
        result = prime * result + ((this.fullName == null) ? 0 : this.fullName.hashCode());
        result = prime * result + ((this.nickName == null) ? 0 : this.nickName.hashCode());
        result = prime * result + ((this.companyName == null) ? 0 : this.companyName.hashCode());
        result = prime * result + ((this.street == null) ? 0 : this.street.hashCode());
        result = prime * result + ((this.state == null) ? 0 : this.state.hashCode());
        result = prime * result + ((this.postcode == null) ? 0 : this.postcode.hashCode());
        result = prime * result + ((this.suburb == null) ? 0 : this.suburb.hashCode());
        result = prime * result + ((this.refCountryId == null) ? 0 : this.refCountryId.hashCode());
        result = prime * result + ((this.phone == null) ? 0 : this.phone.hashCode());
        result = prime * result + ((this.email == null) ? 0 : this.email.hashCode());
        result = prime * result + ((this.password == null) ? 0 : this.password.hashCode());
        result = prime * result + ((this.originalPassword == null) ? 0 : this.originalPassword.hashCode());
        result = prime * result + ((this.imeiNo == null) ? 0 : this.imeiNo.hashCode());
        result = prime * result + ((this.refUserGroupId == null) ? 0 : this.refUserGroupId.hashCode());
        result = prime * result + ((this.refClientId == null) ? 0 : this.refClientId.hashCode());
        result = prime * result + ((this.refSupplierId == null) ? 0 : this.refSupplierId.hashCode());
        result = prime * result + ((this.auditRecord == null) ? 0 : this.auditRecord.hashCode());
        result = prime * result + ((this.sessionTimeLimit == null) ? 0 : this.sessionTimeLimit.hashCode());
        result = prime * result + ((this.reminderIntervalTime == null) ? 0 : this.reminderIntervalTime.hashCode());
        result = prime * result + ((this.userImage == null) ? 0 : this.userImage.hashCode());
        result = prime * result + ((this.loginTime == null) ? 0 : this.loginTime.hashCode());
        result = prime * result + ((this.lastLoginTime == null) ? 0 : this.lastLoginTime.hashCode());
        result = prime * result + ((this.status == null) ? 0 : this.status.hashCode());
        result = prime * result + ((this.website == null) ? 0 : this.website.hashCode());
        result = prime * result + ((this.vatNumber == null) ? 0 : this.vatNumber.hashCode());
        result = prime * result + ((this.deleteStatus == null) ? 0 : this.deleteStatus.hashCode());
        result = prime * result + ((this.transactionId == null) ? 0 : this.transactionId.hashCode());
        result = prime * result + ((this.addedDate == null) ? 0 : this.addedDate.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("User (");

        sb.append(userId);
        sb.append(", ").append(userName);
        sb.append(", ").append(fullName);
        sb.append(", ").append(nickName);
        sb.append(", ").append(companyName);
        sb.append(", ").append(street);
        sb.append(", ").append(state);
        sb.append(", ").append(postcode);
        sb.append(", ").append(suburb);
        sb.append(", ").append(refCountryId);
        sb.append(", ").append(phone);
        sb.append(", ").append(email);
        sb.append(", ").append(password);
        sb.append(", ").append(originalPassword);
        sb.append(", ").append(imeiNo);
        sb.append(", ").append(refUserGroupId);
        sb.append(", ").append(refClientId);
        sb.append(", ").append(refSupplierId);
        sb.append(", ").append(auditRecord);
        sb.append(", ").append(sessionTimeLimit);
        sb.append(", ").append(reminderIntervalTime);
        sb.append(", ").append(userImage);
        sb.append(", ").append(loginTime);
        sb.append(", ").append(lastLoginTime);
        sb.append(", ").append(status);
        sb.append(", ").append(website);
        sb.append(", ").append(vatNumber);
        sb.append(", ").append(deleteStatus);
        sb.append(", ").append(transactionId);
        sb.append(", ").append(addedDate);

        sb.append(")");
        return sb.toString();
    }
}
