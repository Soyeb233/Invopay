/*
 * This file is generated by jOOQ.
 */
package com.commons.invopayWebServices.DTO;


import java.io.Serializable;
import java.time.LocalDateTime;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class LeadAppointmentsDTO implements Serializable {

    private static final long serialVersionUID = 1L;

    private Integer       leadAppointmentId;
    private Integer       refLeadId;
    private LocalDateTime appointmentProcessDate;
    private LocalDateTime appointmentVisitDate;
    private String        appointmentAddress;
    private String        appointmentLandmark;
    private Integer       appointmentToConfirm;
    private LocalDateTime appointmentToConfirmDate;
    private Integer       refAppointmentFeedbackId;
    private String        appointmentComments;
    private Integer       deleteStatus;
    private Integer       refUserId;
    private Integer       transactionId;
    private LocalDateTime addedDate;

    public LeadAppointmentsDTO() {}

    public LeadAppointmentsDTO(LeadAppointmentsDTO value) {
        this.leadAppointmentId = value.leadAppointmentId;
        this.refLeadId = value.refLeadId;
        this.appointmentProcessDate = value.appointmentProcessDate;
        this.appointmentVisitDate = value.appointmentVisitDate;
        this.appointmentAddress = value.appointmentAddress;
        this.appointmentLandmark = value.appointmentLandmark;
        this.appointmentToConfirm = value.appointmentToConfirm;
        this.appointmentToConfirmDate = value.appointmentToConfirmDate;
        this.refAppointmentFeedbackId = value.refAppointmentFeedbackId;
        this.appointmentComments = value.appointmentComments;
        this.deleteStatus = value.deleteStatus;
        this.refUserId = value.refUserId;
        this.transactionId = value.transactionId;
        this.addedDate = value.addedDate;
    }

    public LeadAppointmentsDTO(
        Integer       leadAppointmentId,
        Integer       refLeadId,
        LocalDateTime appointmentProcessDate,
        LocalDateTime appointmentVisitDate,
        String        appointmentAddress,
        String        appointmentLandmark,
        Integer       appointmentToConfirm,
        LocalDateTime appointmentToConfirmDate,
        Integer       refAppointmentFeedbackId,
        String        appointmentComments,
        Integer       deleteStatus,
        Integer       refUserId,
        Integer       transactionId,
        LocalDateTime addedDate
    ) {
        this.leadAppointmentId = leadAppointmentId;
        this.refLeadId = refLeadId;
        this.appointmentProcessDate = appointmentProcessDate;
        this.appointmentVisitDate = appointmentVisitDate;
        this.appointmentAddress = appointmentAddress;
        this.appointmentLandmark = appointmentLandmark;
        this.appointmentToConfirm = appointmentToConfirm;
        this.appointmentToConfirmDate = appointmentToConfirmDate;
        this.refAppointmentFeedbackId = refAppointmentFeedbackId;
        this.appointmentComments = appointmentComments;
        this.deleteStatus = deleteStatus;
        this.refUserId = refUserId;
        this.transactionId = transactionId;
        this.addedDate = addedDate;
    }

    /**
     * Getter for <code>invopay.lead_appointments.lead_appointment_id</code>.
     */
    public Integer getLeadAppointmentId() {
        return this.leadAppointmentId;
    }

    /**
     * Setter for <code>invopay.lead_appointments.lead_appointment_id</code>.
     */
    public LeadAppointmentsDTO setLeadAppointmentId(Integer leadAppointmentId) {
        this.leadAppointmentId = leadAppointmentId;
        return this;
    }

    /**
     * Getter for <code>invopay.lead_appointments.ref_lead_id</code>. Lead Name
     */
    public Integer getRefLeadId() {
        return this.refLeadId;
    }

    /**
     * Setter for <code>invopay.lead_appointments.ref_lead_id</code>. Lead Name
     */
    public LeadAppointmentsDTO setRefLeadId(Integer refLeadId) {
        this.refLeadId = refLeadId;
        return this;
    }

    /**
     * Getter for <code>invopay.lead_appointments.appointment_process_date</code>. Process Date
     */
    public LocalDateTime getAppointmentProcessDate() {
        return this.appointmentProcessDate;
    }

    /**
     * Setter for <code>invopay.lead_appointments.appointment_process_date</code>. Process Date
     */
    public LeadAppointmentsDTO setAppointmentProcessDate(LocalDateTime appointmentProcessDate) {
        this.appointmentProcessDate = appointmentProcessDate;
        return this;
    }

    /**
     * Getter for <code>invopay.lead_appointments.appointment_visit_date</code>. Visit Date
     */
    public LocalDateTime getAppointmentVisitDate() {
        return this.appointmentVisitDate;
    }

    /**
     * Setter for <code>invopay.lead_appointments.appointment_visit_date</code>. Visit Date
     */
    public LeadAppointmentsDTO setAppointmentVisitDate(LocalDateTime appointmentVisitDate) {
        this.appointmentVisitDate = appointmentVisitDate;
        return this;
    }

    /**
     * Getter for <code>invopay.lead_appointments.appointment_address</code>. Address
     */
    public String getAppointmentAddress() {
        return this.appointmentAddress;
    }

    /**
     * Setter for <code>invopay.lead_appointments.appointment_address</code>. Address
     */
    public LeadAppointmentsDTO setAppointmentAddress(String appointmentAddress) {
        this.appointmentAddress = appointmentAddress;
        return this;
    }

    /**
     * Getter for <code>invopay.lead_appointments.appointment_landmark</code>.
     */
    public String getAppointmentLandmark() {
        return this.appointmentLandmark;
    }

    /**
     * Setter for <code>invopay.lead_appointments.appointment_landmark</code>.
     */
    public LeadAppointmentsDTO setAppointmentLandmark(String appointmentLandmark) {
        this.appointmentLandmark = appointmentLandmark;
        return this;
    }

    /**
     * Getter for <code>invopay.lead_appointments.appointment_to_confirm</code>. App Confirm
     */
    public Integer getAppointmentToConfirm() {
        return this.appointmentToConfirm;
    }

    /**
     * Setter for <code>invopay.lead_appointments.appointment_to_confirm</code>. App Confirm
     */
    public LeadAppointmentsDTO setAppointmentToConfirm(Integer appointmentToConfirm) {
        this.appointmentToConfirm = appointmentToConfirm;
        return this;
    }

    /**
     * Getter for <code>invopay.lead_appointments.appointment_to_confirm_date</code>. Appointment Date
     */
    public LocalDateTime getAppointmentToConfirmDate() {
        return this.appointmentToConfirmDate;
    }

    /**
     * Setter for <code>invopay.lead_appointments.appointment_to_confirm_date</code>. Appointment Date
     */
    public LeadAppointmentsDTO setAppointmentToConfirmDate(LocalDateTime appointmentToConfirmDate) {
        this.appointmentToConfirmDate = appointmentToConfirmDate;
        return this;
    }

    /**
     * Getter for <code>invopay.lead_appointments.ref_appointment_feedback_id</code>. Feedback
     */
    public Integer getRefAppointmentFeedbackId() {
        return this.refAppointmentFeedbackId;
    }

    /**
     * Setter for <code>invopay.lead_appointments.ref_appointment_feedback_id</code>. Feedback
     */
    public LeadAppointmentsDTO setRefAppointmentFeedbackId(Integer refAppointmentFeedbackId) {
        this.refAppointmentFeedbackId = refAppointmentFeedbackId;
        return this;
    }

    /**
     * Getter for <code>invopay.lead_appointments.appointment_comments</code>.
     */
    public String getAppointmentComments() {
        return this.appointmentComments;
    }

    /**
     * Setter for <code>invopay.lead_appointments.appointment_comments</code>.
     */
    public LeadAppointmentsDTO setAppointmentComments(String appointmentComments) {
        this.appointmentComments = appointmentComments;
        return this;
    }

    /**
     * Getter for <code>invopay.lead_appointments.delete_status</code>.
     */
    public Integer getDeleteStatus() {
        return this.deleteStatus;
    }

    /**
     * Setter for <code>invopay.lead_appointments.delete_status</code>.
     */
    public LeadAppointmentsDTO setDeleteStatus(Integer deleteStatus) {
        this.deleteStatus = deleteStatus;
        return this;
    }

    /**
     * Getter for <code>invopay.lead_appointments.ref_user_id</code>.
     */
    public Integer getRefUserId() {
        return this.refUserId;
    }

    /**
     * Setter for <code>invopay.lead_appointments.ref_user_id</code>.
     */
    public LeadAppointmentsDTO setRefUserId(Integer refUserId) {
        this.refUserId = refUserId;
        return this;
    }

    /**
     * Getter for <code>invopay.lead_appointments.transaction_id</code>.
     */
    public Integer getTransactionId() {
        return this.transactionId;
    }

    /**
     * Setter for <code>invopay.lead_appointments.transaction_id</code>.
     */
    public LeadAppointmentsDTO setTransactionId(Integer transactionId) {
        this.transactionId = transactionId;
        return this;
    }

    /**
     * Getter for <code>invopay.lead_appointments.added_date</code>.
     */
    public LocalDateTime getAddedDate() {
        return this.addedDate;
    }

    /**
     * Setter for <code>invopay.lead_appointments.added_date</code>.
     */
    public LeadAppointmentsDTO setAddedDate(LocalDateTime addedDate) {
        this.addedDate = addedDate;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final LeadAppointmentsDTO other = (LeadAppointmentsDTO) obj;
        if (leadAppointmentId == null) {
            if (other.leadAppointmentId != null)
                return false;
        }
        else if (!leadAppointmentId.equals(other.leadAppointmentId))
            return false;
        if (refLeadId == null) {
            if (other.refLeadId != null)
                return false;
        }
        else if (!refLeadId.equals(other.refLeadId))
            return false;
        if (appointmentProcessDate == null) {
            if (other.appointmentProcessDate != null)
                return false;
        }
        else if (!appointmentProcessDate.equals(other.appointmentProcessDate))
            return false;
        if (appointmentVisitDate == null) {
            if (other.appointmentVisitDate != null)
                return false;
        }
        else if (!appointmentVisitDate.equals(other.appointmentVisitDate))
            return false;
        if (appointmentAddress == null) {
            if (other.appointmentAddress != null)
                return false;
        }
        else if (!appointmentAddress.equals(other.appointmentAddress))
            return false;
        if (appointmentLandmark == null) {
            if (other.appointmentLandmark != null)
                return false;
        }
        else if (!appointmentLandmark.equals(other.appointmentLandmark))
            return false;
        if (appointmentToConfirm == null) {
            if (other.appointmentToConfirm != null)
                return false;
        }
        else if (!appointmentToConfirm.equals(other.appointmentToConfirm))
            return false;
        if (appointmentToConfirmDate == null) {
            if (other.appointmentToConfirmDate != null)
                return false;
        }
        else if (!appointmentToConfirmDate.equals(other.appointmentToConfirmDate))
            return false;
        if (refAppointmentFeedbackId == null) {
            if (other.refAppointmentFeedbackId != null)
                return false;
        }
        else if (!refAppointmentFeedbackId.equals(other.refAppointmentFeedbackId))
            return false;
        if (appointmentComments == null) {
            if (other.appointmentComments != null)
                return false;
        }
        else if (!appointmentComments.equals(other.appointmentComments))
            return false;
        if (deleteStatus == null) {
            if (other.deleteStatus != null)
                return false;
        }
        else if (!deleteStatus.equals(other.deleteStatus))
            return false;
        if (refUserId == null) {
            if (other.refUserId != null)
                return false;
        }
        else if (!refUserId.equals(other.refUserId))
            return false;
        if (transactionId == null) {
            if (other.transactionId != null)
                return false;
        }
        else if (!transactionId.equals(other.transactionId))
            return false;
        if (addedDate == null) {
            if (other.addedDate != null)
                return false;
        }
        else if (!addedDate.equals(other.addedDate))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.leadAppointmentId == null) ? 0 : this.leadAppointmentId.hashCode());
        result = prime * result + ((this.refLeadId == null) ? 0 : this.refLeadId.hashCode());
        result = prime * result + ((this.appointmentProcessDate == null) ? 0 : this.appointmentProcessDate.hashCode());
        result = prime * result + ((this.appointmentVisitDate == null) ? 0 : this.appointmentVisitDate.hashCode());
        result = prime * result + ((this.appointmentAddress == null) ? 0 : this.appointmentAddress.hashCode());
        result = prime * result + ((this.appointmentLandmark == null) ? 0 : this.appointmentLandmark.hashCode());
        result = prime * result + ((this.appointmentToConfirm == null) ? 0 : this.appointmentToConfirm.hashCode());
        result = prime * result + ((this.appointmentToConfirmDate == null) ? 0 : this.appointmentToConfirmDate.hashCode());
        result = prime * result + ((this.refAppointmentFeedbackId == null) ? 0 : this.refAppointmentFeedbackId.hashCode());
        result = prime * result + ((this.appointmentComments == null) ? 0 : this.appointmentComments.hashCode());
        result = prime * result + ((this.deleteStatus == null) ? 0 : this.deleteStatus.hashCode());
        result = prime * result + ((this.refUserId == null) ? 0 : this.refUserId.hashCode());
        result = prime * result + ((this.transactionId == null) ? 0 : this.transactionId.hashCode());
        result = prime * result + ((this.addedDate == null) ? 0 : this.addedDate.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("LeadAppointments (");

        sb.append(leadAppointmentId);
        sb.append(", ").append(refLeadId);
        sb.append(", ").append(appointmentProcessDate);
        sb.append(", ").append(appointmentVisitDate);
        sb.append(", ").append(appointmentAddress);
        sb.append(", ").append(appointmentLandmark);
        sb.append(", ").append(appointmentToConfirm);
        sb.append(", ").append(appointmentToConfirmDate);
        sb.append(", ").append(refAppointmentFeedbackId);
        sb.append(", ").append(appointmentComments);
        sb.append(", ").append(deleteStatus);
        sb.append(", ").append(refUserId);
        sb.append(", ").append(transactionId);
        sb.append(", ").append(addedDate);

        sb.append(")");
        return sb.toString();
    }
}
